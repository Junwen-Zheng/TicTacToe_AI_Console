/**
 * This class represent the GUI window of the tic tac toe game where user
 * can play move by clicking on the board square and play with computer. The window
 * also shows a log of both player's moves and a status message of the current game
 * state.
 */
package tictactoe.ui;

import java.awt.BorderLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import tictactoe.core.Board;
import tictactoe.core.ComputerPlayer;
import tictactoe.core.Game;
import tictactoe.core.HumanPlayer;
import tictactoe.core.Move;
import tictactoe.core.Player;

/**
 *
 * @author
 */
public class TicTacToeUI extends javax.swing.JFrame implements MouseListener {

    /** the board model class */
    private Board board;
    
    /** the board view class */
    private BoardPanel boardView;
    
    /** the game model class */
    private Game game;
    
    /** the human player */
    private Player humanPlayer = new HumanPlayer();
    
    /** the computer player */
    private Player compPlayer = new ComputerPlayer();
    
    /**
     * Creates new form TicTacToeUI
     */
    public TicTacToeUI() {
        initComponents();
        
        board = new Board();
        boardView = new BoardPanel(board);
        boardView.addMouseListener(this);
        
        game = new Game(board, humanPlayer, compPlayer);
        
        jPanelCenter.add(boardView, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelSouth = new javax.swing.JPanel();
        lblMessage = new javax.swing.JLabel();
        jPanelLog = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextMoveLog = new javax.swing.JTextArea();
        jPanelCenter = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");

        jPanelSouth.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        lblMessage.setText("Human Player's Move");
        jPanelSouth.add(lblMessage);

        getContentPane().add(jPanelSouth, java.awt.BorderLayout.SOUTH);

        jPanelLog.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanelLog.setLayout(new java.awt.BorderLayout(0, 5));

        jLabel1.setText("Player's move logs");
        jPanelLog.add(jLabel1, java.awt.BorderLayout.NORTH);

        jTextMoveLog.setEditable(false);
        jTextMoveLog.setColumns(25);
        jTextMoveLog.setRows(5);
        jScrollPane1.setViewportView(jTextMoveLog);

        jPanelLog.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelLog, java.awt.BorderLayout.EAST);

        jPanelCenter.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        jPanelCenter.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelLog;
    private javax.swing.JPanel jPanelSouth;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextMoveLog;
    private javax.swing.JLabel lblMessage;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {        
    }

    @Override
    public void mousePressed(MouseEvent e) {        
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        int mouseX = e.getX();
        int mouseY = e.getY();
        Move move = boardView.getMoveFromBoardClick(mouseX, mouseY);
        if(!board.isValidMove(humanPlayer, move.getRow(), move.getColumn())){
            lblMessage.setText("HumanPlayer: That's an invalid move !");
            jTextMoveLog.append(" HumanPlayer played at " + move.toString()+"\n");
        }
        else{
            board.set(move.getRow(), move.getColumn(), humanPlayer);
            boardView.updateUI();
            move = compPlayer.move(board);
            board.set(move.getRow(), move.getColumn(), compPlayer);
            boardView.updateUI();
            jTextMoveLog.append(" ComputerPlayer played at " + move.toString()+"\n");
        }
    }

    @Override
    public void mouseEntered(MouseEvent e) {        
    }

    @Override
    public void mouseExited(MouseEvent e) {        
    }
}
